#pragma once

#include <unordered_map>

#include "WindowRenderer.h"

namespace PTOS {
	class PTOS_API GLFWRenderer : public WindowRenderer {
	public:
		PTOS_OVERRIDE_WINDOW_RENDERER_METHODS(GLFWRenderer)
		inline bool isCreated() override { return win != nullptr; }
		inline GLFWimage* getIcon() { return &icon; }
		void setIcon(GLFWimage& icon);
	private:
		GLFWimage icon = PTOS_GLFW_ICON_EMPTY;
		GLFWwindow* win = nullptr;
	};

	const std::unordered_map<int, InputCode> codeMapGLFW = {
		{GLFW_KEY_ESCAPE, INPUT_CODE_KEY_ESC},
		{GLFW_KEY_ENTER, INPUT_CODE_KEY_ENTER},
		{GLFW_KEY_TAB, INPUT_CODE_KEY_TAB},
		{GLFW_KEY_BACKSPACE, INPUT_CODE_KEY_BACKSPACE},
		{GLFW_KEY_INSERT, INPUT_CODE_KEY_INSERT},
		{GLFW_KEY_DELETE, INPUT_CODE_KEY_DEL},
		{GLFW_KEY_RIGHT, INPUT_CODE_KEY_RIGHT},
		{GLFW_KEY_LEFT, INPUT_CODE_KEY_LEFT},
		{GLFW_KEY_DOWN, INPUT_CODE_KEY_DOWN},
		{GLFW_KEY_UP, INPUT_CODE_KEY_UP},
		{GLFW_KEY_PAGE_UP, INPUT_CODE_KEY_PAGE_UP},
		{GLFW_KEY_PAGE_DOWN, INPUT_CODE_KEY_PAGE_DOWN},
		{GLFW_KEY_HOME, INPUT_CODE_KEY_HOME},
		{GLFW_KEY_END, INPUT_CODE_KEY_END},
		{GLFW_KEY_CAPS_LOCK, INPUT_CODE_KEY_CAPS_LOCK},
		{GLFW_KEY_SCROLL_LOCK, INPUT_CODE_KEY_SCROLL_LOCK},
		{GLFW_KEY_NUM_LOCK, INPUT_CODE_KEY_NUM_LOCK},
		{GLFW_KEY_PRINT_SCREEN, INPUT_CODE_KEY_PRINT},
		{GLFW_KEY_PAUSE, INPUT_CODE_KEY_PAUSE},
		{GLFW_KEY_F1, INPUT_CODE_KEY_F1},
		{GLFW_KEY_F2, INPUT_CODE_KEY_F2},
		{GLFW_KEY_F3, INPUT_CODE_KEY_F3},
		{GLFW_KEY_F4, INPUT_CODE_KEY_F4},
		{GLFW_KEY_F5, INPUT_CODE_KEY_F5},
		{GLFW_KEY_F6, INPUT_CODE_KEY_F6},
		{GLFW_KEY_F7, INPUT_CODE_KEY_F7},
		{GLFW_KEY_F8, INPUT_CODE_KEY_F8},
		{GLFW_KEY_F9, INPUT_CODE_KEY_F9},
		{GLFW_KEY_F10, INPUT_CODE_KEY_F10},
		{GLFW_KEY_F11, INPUT_CODE_KEY_F11},
		{GLFW_KEY_F12, INPUT_CODE_KEY_F12},
		{GLFW_KEY_F13, INPUT_CODE_KEY_F13},
		{GLFW_KEY_F14, INPUT_CODE_KEY_F14},
		{GLFW_KEY_F15, INPUT_CODE_KEY_F15},
		{GLFW_KEY_F16, INPUT_CODE_NONE},
		{GLFW_KEY_F17, INPUT_CODE_NONE},
		{GLFW_KEY_F18, INPUT_CODE_NONE},
		{GLFW_KEY_F19, INPUT_CODE_NONE},
		{GLFW_KEY_F20, INPUT_CODE_NONE},
		{GLFW_KEY_F21, INPUT_CODE_NONE},
		{GLFW_KEY_F22, INPUT_CODE_NONE},
		{GLFW_KEY_F23, INPUT_CODE_NONE},
		{GLFW_KEY_F24, INPUT_CODE_NONE},
		{GLFW_KEY_F25, INPUT_CODE_NONE},
		{GLFW_KEY_KP_0, INPUT_CODE_KEY_KP_0},
		{GLFW_KEY_KP_1, INPUT_CODE_KEY_KP_1},
		{GLFW_KEY_KP_2, INPUT_CODE_KEY_KP_2},
		{GLFW_KEY_KP_3, INPUT_CODE_KEY_KP_3},
		{GLFW_KEY_KP_4, INPUT_CODE_KEY_KP_4},
		{GLFW_KEY_KP_5, INPUT_CODE_KEY_KP_5},
		{GLFW_KEY_KP_6, INPUT_CODE_KEY_KP_6},
		{GLFW_KEY_KP_7, INPUT_CODE_KEY_KP_7},
		{GLFW_KEY_KP_8, INPUT_CODE_KEY_KP_8},
		{GLFW_KEY_KP_9, INPUT_CODE_KEY_KP_9},
		{GLFW_KEY_KP_DECIMAL, INPUT_CODE_KEY_KP_PERIOD},
		{GLFW_KEY_KP_DIVIDE, INPUT_CODE_KEY_KP_DIVIDE},
		{GLFW_KEY_KP_MULTIPLY, INPUT_CODE_KEY_KP_MULTIPLY},
		{GLFW_KEY_KP_SUBTRACT, INPUT_CODE_KEY_KP_MINUS},
		{GLFW_KEY_KP_ADD, INPUT_CODE_KEY_KP_PLUS},
		{GLFW_KEY_KP_ENTER, INPUT_CODE_KEY_KP_ENTER},
		{GLFW_KEY_KP_EQUAL, INPUT_CODE_KEY_KP_EQUALS},
		{GLFW_KEY_LEFT_SHIFT, INPUT_CODE_KEY_SHIFT_LEFT},
		{GLFW_KEY_RIGHT_SHIFT, INPUT_CODE_KEY_SHIFT_RIGHT},
		{GLFW_KEY_LEFT_CONTROL, INPUT_CODE_KEY_CONTROL_LEFT},
		{GLFW_KEY_RIGHT_CONTROL, INPUT_CODE_KEY_CONTROL_RIGHT},
		{GLFW_KEY_LEFT_ALT, INPUT_CODE_KEY_ALT_LEFT},
		{GLFW_KEY_RIGHT_ALT, INPUT_CODE_KEY_ALT_RIGHT},
		{GLFW_KEY_LEFT_SUPER, INPUT_CODE_KEY_COMMAND_LEFT},
		{GLFW_KEY_RIGHT_SUPER, INPUT_CODE_KEY_COMMAND_RIGHT}
	};
}

